@import "variables";

:host {
	display: block;
	width: 100%;
	margin-bottom: 2px;
}

.server-list-item {
	position: relative;
	display: flex;
	align-items: center;
	overflow: hidden;

	height: var(--q2);

	padding: 2px;

	font-size: var(--fs-1);

	cursor: default;
	user-select: none;

	will-change: background, box-shadow;

	@include theme() using ($theme) {
		background-color: gtv($theme, bgColor);

		&.pinned {
			background-color: mix(gtv($theme, bgColor), gtv($theme, accentColor2), 85%);
		}
	};

	&.isPinList {
		height: calc(var(--q3) + 1px);

		.icon {
			width: calc(var(--q3) - 4px + 1px);
			height: calc(var(--q3) - 4px + 1px);
		}

		.badge {
			display: none;
		}

		.name {
			white-space: normal;
			word-break: break-all;
			display: -webkit-box;
			-webkit-line-clamp: 2;
			-webkit-box-orient: vertical;
		}

		.players {
			width: var(--q4);
			font-size: calc(var(--fs-1) * 0.8);
		}

		.locale {
			display: none;
		}

		.name {
			&:after {
				@include theme() using ($theme) {
					$pinColor: mix(gtv($theme, bgColor), gtv($theme, accentColor2), 85%);
					background-image: linear-gradient(90deg, rgba($pinColor, 0.0) 50%, rgba($pinColor, 1.0) 60%);
				}
			}

			&.projectName {
				strong {
					display: block;
				}

				> span {
					margin-left: 0;
					white-space: nowrap;
				}
			}
		}

		.tags {
			display: none;
		}
	}

	.premium {
		position: absolute;
		top: 2px;
		left: 2px;
		bottom: 2px;

		width: var(--q4);
		pointer-events: none;

		z-index: 1;

		@include theme() using ($theme) {
			--color: #{rgba(gtv($theme, fgColor), .15)};
			--color2: #{rgba(gtv($theme, bgColor), 0)};

			background: linear-gradient(
				110deg,
				var(--color) 0%,
				var(--color2) 70%,
			);

			&.au {
				--color: #{rgba(gtv($theme, auColor), .25)};
			}

			&.pt {
				--color: #{rgba(gtv($theme, accentColor1), .35)};
			}
		}
	}

	.icon {
		flex-shrink: 0;

		width: calc(var(--q2) - 4px);
		height: calc(var(--q2) - 4px);

		z-index: 2;

		::ng-deep img, img {
			width: 100%;
			height: 100%;
		}
	}

	.flame {
        font-size: calc(var(--fs-1) / 1.5);
        opacity: 0;

        &.visible {
            opacity: 1;
        }
    }

	.locale {
		margin-left: var(--qh);

		.flag-icon {
			height: 1em;
			vertical-align: middle;
		}
	}

	.badge {
		margin-left: var(--qh);
	}

	.name {
		margin-left: var(--qh);

		white-space: nowrap;
		overflow: hidden;
		text-overflow: ellipsis;

		flex-grow: 1;

		text-align: left;
		padding-right: var(--qh);

		@include theme() using ($theme) {
			color: gtv($theme, secondaryColor);
		};

		font-feature-settings: 'case', 'liga' 1;

		position: relative;

		&.projectName {
			&:after {
				display: none;
			}

			strong {
				font-weight: inherit;
			}

			> span {
				font-size: calc(var(--fs-1) * 0.8);
				margin-left: 0.5em;

				@include theme() using ($theme) {
					color: rgba(gtv($theme, fgColor), .6);
				}

				filter: saturate(0%);
			}
		}

		&:after {
			position: absolute;
			right: 0px;
			bottom: 0px;
			top: 0px;
			left: 0px;
			content: ' ';

			@include theme() using ($theme) {
				background-image: linear-gradient(90deg, rgba(gtv($theme, bgColor), 0.0) 4%, rgba(gtv($theme, bgColor), 1.0) 14%);
			}
		}
	}

	.tags {
		flex-shrink: 0;
		justify-content: flex-end;

        padding-right: calc(var(--qh) * 0.5);

		span {
			display: inline-block;
			font-size: calc(var(--fs-1) * 0.75);
			padding: calc(var(--qh) * 0.5);
			margin-right: calc(var(--qh) * 0.5);

			@include theme() using ($theme) {
				background-color: mix(gtv($theme, bgColor), gtv($theme, accentColor2), 85%);
			}
		}
	}

	.actions {
		flex-shrink: 0;

		width: 0;
		height: 100%;

		display: none;
		align-items: center;
		justify-content: flex-end;

		padding-right: var(--qh);

		button {
			opacity: 0;

			flex-grow: 1;

			display: flex;
			align-items: center;
			justify-content: center;

			height: calc(100% - 0px);

			background: transparent;
			border: none;
			outline: none;

			@include theme() using ($theme) {
				color: gtv($theme, textColor);
			};

			svg {
				width: var(--q1);
				height: var(--q1);
			}

			& > .material-icons-outlined {
				width: var(--fs-1);
			}

			&.fav {
				justify-content: center;

				border-right: solid 2px transparent;

				&:hover, &:focus {
					@include theme() using ($theme) {
						color: gtv($theme, accentColor1);
					}
				}
			}

			&.boost {
				position: relative;

				width: var(--q3);

                &.web {
                    width: auto;
                    cursor: default;
                }

				justify-content: space-between;

				padding: calc(var(--qh) / 2);

				font-size: calc(var(--fs-1) / 1.5);
				font-weight: 500;
				line-height: 1;

				overflow: hidden;

				.material-icons-outlined {
					font-size: calc(var(--fs-1) / 1.5);
					margin-right: calc(var(--qh) / 2);
				}

				.boosts-counter {
					padding-right: calc(var(--qh) / 2);

					font-weight: 500;
				}

				@include theme() using ($theme) {
					color: gtv($theme, fgColor);
					border: solid 2px rgba(gtv($theme, accentColor1), .5);
					border-top: none;
					border-bottom: none;
				};

				.booster {
					position: absolute;
					top: 0;
					left: 0;
					right: 0;
					bottom: 0;

					display: flex;
					align-items: center;
					justify-content: center;

					opacity: 0;
					transform: scale(1.3);

					@include theme() using ($theme) {
						color: gtv($theme, accentContrastColor);
						background-color: gtv($theme, accentColor1);
					};

					transition: all .2s ease;
				}

				&.upvotes {
                    display: flex;
                    align-items: center;
                    justify-content: space-between;

                    width: var(--q3);
                    height: 100%;

                    padding: calc(var(--qh) / 1.5);

                    @include theme() using ($theme) {
                        color: gtv($theme, fgColor);
                        border-left: solid 2px rgba(gtv($theme, accentColor1), .5);
                        border-top: none;
                        border-bottom: none;
                        border-right: none;
                    };

                    font-size: calc(var(--fs-1) / 1.5);
                    font-weight: 500;
                    line-height: 1;

                    opacity: 0;

                    transition: .5s;
                    transform: translateX(calc(var(--qh)+15px));

                    &.visible {
                        opacity: 1;
                        transform: translateX(calc(var(--qh)-13));
                    }
                }

				&:hover, &:focus {
					.booster {
						opacity: 1;
						transform: scale(1);
					}
				}
			}

			&.active {
				opacity: 1;

				@include theme() using ($theme) {
					color: gtv($theme, accentColor1);
				};
			}
		}
	}

	.players {
		flex-shrink: 0;
		width: var(--q5);

		padding-right: var(--qh);

		text-align: right;

		.max {
			opacity: .5;
		}
	}

	&:hover, &:focus {
		@include theme() using ($theme) {
			box-shadow: 0 0 0 2px gtv($theme, accentColor1) inset;
		};

		.actions {
			width: var(--q10);
			display: flex;

			&.wide {
				width: var(--q13);
			}

            &.web {
                width: auto;
            }
		}

		.actions button {
			opacity: 1;

			transition: none;

			&.fav {
				@include theme() using ($theme) {
					border-right: solid 2px rgba(gtv($theme, accentColor1), .5);
				}
			}
		}

		.tags {
			opacity: 0;
		}

		.name {
			&:after {
				opacity: 0;
			}
		}
	}
}
