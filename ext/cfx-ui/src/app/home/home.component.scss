@import "variables";

:host {
	@include theme() using ($theme) {
		color: gtv($theme, textColor);
	};

	@include appContent;
}

.home {
	display: flex;
	flex-direction: column;

	height: 100%;

	.oi {
		flex-shrink: 0;

		display: flex;
		justify-content: space-between;

		height: var(--header-height);

		@include backdropPane;

		padding-right: var(--header-safe-right-raw);

		line-height: 1;
		font-size: var(--fs-1);

		.left,
		.right {
			display: flex;
			align-items: center;
		}

		.left {
			flex-grow: 1;
		}

		.right {
			flex-shrink: 0;

			&>* {
				margin-left: var(--q1);
			}
		}

		.links {
			list-style: none;

			display: flex;

			height: 100%;

			li {
				display: flex;
				align-items: center;
				justify-content: center;

				height: 100%;

				padding: var(--q1);

				text-transform: uppercase;

				transition: all .2s ease;

				&:hover, &:focus {
					transition: none;

					@include theme() using ($theme) {
						color: gtv($theme, accentContrastColor);
						background-color: gtv($theme, accentColor1);
					}
				}
			}
		}

		.service-message {
			flex-grow: 1;

			height: 100%;

			::ng-deep {
				&>div {
					display: flex;
					align-items: center;

					height: 100%;

					padding: var(--q1);
				}

				.danger {
					@include theme() using ($theme) {
						color: gtv($theme, accentContrastColor);
						background-color: gtv($theme, accentColor1);
					}
				}

				.warning {
					@include theme() using ($theme) {
						color: gtv($theme, fgColor);
						background-color: rgba(gtv($theme, yellowColor), .2);
					}
				}
			}
		}

		.status-indicator {
			font-size: var(--fs-2);
		}

		.status-good {
			@include theme() using ($theme) {
				color: gtv($theme, activeColor);
			}
		}
		.status-warn {
			@include theme() using ($theme) {
				color: gtv($theme, yellowColor);
			}
		}
		.status-bad {
			@include theme() using ($theme) {
				color: gtv($theme,  redColor);
			}
		}

		.player-stats {
			display: flex;
			flex-direction: column;
			align-items: flex-start;
			justify-content: space-evenly;

			height: 100%;

			font-size: var(--fs-075);

			@include fontMontserrat;

			@include theme() using ($theme) {
				color: rgba(gtv($theme, fgColor), .5);
			};

			&>div {
				display: flex;
				align-items: center;
				justify-content: center;
			}

			.material-icons-outlined {
				opacity: .5;
				margin-right: 2px;
			}
		}

		.account-link {
			margin-right: var(--qh);
		}

		.userpic {
			width: var(--header-height);
			height: var(--header-height);

			background-size: cover;
			position: relative;

			span {
				position: absolute;
				font-size: var(--q1);
				bottom: calc(((var(--q1) + var(--qh) / 2) / 2) * -1);
				right: calc(((var(--q1) + var(--qh) / 2) / 2) * -1);

				@include theme() using ($theme) {
					background-color: rgba(gtv($theme, accentColor1), 1);
				}

				border-radius: 100%;
				padding: calc(var(--qh) / 2);
			}
		}
	}

	.layout {
		height: calc(100% - var(--q1));
		margin-top: var(--q1);

		display: grid;

		grid-template-columns: 2fr 2.5fr 1.1fr 1.4fr 2fr 2fr;
		grid-template-rows: 3fr 1.25fr 2.25fr 2fr;
		grid-template-areas:
			"play   play   play   links  community official"
			"ad     ad     ad     ad     community official"
			"story  story  replay replay community official"
			"create create create create community official";

		gap: var(--q1);

		overflow: hidden;

		&>* {
			overflow: hidden;
		}

		.card {
			display: block;

			text-decoration: none;
			@include backdropBlur;
			@include backdropPane;

			transition: all .2s ease;

			.card_title {
				@include theme() using ($theme) {
					color: gtv($theme, fgColor);
				}

				text-transform: uppercase;

				transition: all .2s ease;

				.material-icons-outlined {
					font-size: var(--fs-4);

					margin-right: calc(var(--q1) / 2);
				}
			}

			&:hover, &:focus {
				transition: none;

				@include theme() using ($theme) {
					background-color: rgba(gtv($theme, accentColor1), css-max(var(--opacity-clamp), .05));
					box-shadow: 0 0 0 2px gtv($theme, accentColor1) inset;

					.card_title {
						color: gtv($theme, accentColor1);

						transition: none;
					}
				}
			}
		}

		.play {
			grid-area: play;

			display: flex;
			flex-direction: column;
			align-items: stretch;
			justify-content: stretch;

			.card {
				@include borderedPane;

				@include theme() using ($theme) {
					box-shadow: 0 0 0 2px rgba(gtv($theme, accentColor1), .5) inset;
				}

				display: flex;
				flex-direction: column;
				position: relative;
				overflow: hidden;

				.bg {
					@include patternBackground;

					@keyframes bganim {
						0% {
							transform: translate(0px, 0px);
						}
						50% {
							transform: translate(500px, -500px);
						}
						100% {
							transform: translate(1000px, -1000px);
						}
					}

					will-change: transform, background-position;

					animation: bganim 40s linear 0s infinite;
					position: absolute;
					top: 0px;
					left: -1000px;
					right: 0px;
					bottom: -1000px;
				}

				.content {
					z-index: 10;
					flex-grow: 1;

					display: flex;
					flex-direction: column;
					justify-content: space-between;
				}

				&:hover, &:focus {
					transition: none;

					@include theme() using ($theme) {
						background-color: rgba(gtv($theme, accentColor1), css-max(var(--opacity-clamp), .05));
						box-shadow: 0 0 0 2px gtv($theme, accentColor1) inset;

						.card_title {
							color: gtv($theme, accentColor1);

							transition: none;
						}
					}
				}
			}

			.last-server {
				display: flex;
				flex-direction: column;
				align-items: flex-start;

				@include backdropPane;

				margin-top: var(--qh);

				opacity: .5;

				transition: all .2s ease;

				&:hover, &:focus {
					opacity: 1;

					transition: none;

					.content {
						@include theme() using ($theme) {
							box-shadow: 0 0 0 2px gtv($theme, accentColor1) inset;
						}

						.actions button {
							opacity: 1;

							transition: none;

							&.fav {
								@include theme() using ($theme) {
									box-shadow: 2px 0 0 rgba(gtv($theme, accentColor1), .5) inset,
												-2px 0 0 rgba(gtv($theme, accentColor1), .5) inset;
								}
							}
						}
					}
				}

				.content {
					display: flex;
					align-items: center;

					width: 100%;
					height: var(--q2);

					padding: 2px;

					.icon {
						flex-shrink: 0;

						width: calc(var(--q2) - 4px);
						height: calc(var(--q2) - 4px);

						z-index: 2;

						::ng-deep img, img {
							width: 100%;
							height: 100%;
						}
					}

					.title {
						margin-left: var(--qh);

						white-space: nowrap;
						overflow: hidden;
						text-overflow: ellipsis;
						font-size: var(--fs-1);
						line-height: 1.2;

						flex-grow: 1;

						text-align: left;
						padding-right: var(--qh);

						@include theme() using ($theme) {
							color: gtv($theme, secondaryColor);
						};

						font-feature-settings: 'case', 'liga' 1;
					}

					.players {
						flex-shrink: 0;
						width: var(--q5);

						padding-right: var(--qh);

						text-align: right;

						.max {
							opacity: .5;
						}
					}
				}

				.info {
					display: flex;
					align-items: center;

					padding: 2px;
					padding-right: 4px;

					font-size: var(--fs-075);
					font-weight: 100;
					text-transform: lowercase;

					@include theme() using ($theme) {
						color: rgba(gtv($theme, fgColor), .75);
					}

					.status {
						position: relative;

						display: inline-flex;
						align-items: center;
						justify-content: center;

						margin-right: var(--qh);

						text-align: center;
						line-height: 1;
						font-size: var(--fs-075);

						color: var(--color);

						&::before {
							content: '';
							display: block;

							flex-shrink: 0;

							width: var(--fs-05);
							height: var(--fs-05);
							border-radius: var(--fs-05);

							margin-left: 2px;
							margin-right: 4px;

							background-color: var(--color);
						}


						@include theme() using ($theme) {
							border-color: rgba(gtv($theme, fgColor), .5);

							&.loading {
								--color: #{gtv($theme, fgColor)};

								@keyframes loading {
									0% {
										opacity: .5;
									}
									50% {
										opacity: 1;
									}
									100% {
										opacity: .5;
									}
								}

								animation: loading .5s ease 0s infinite;
							}
							&.online {
								--color: rgb(0, 255, 0);
							}
							&.offline {
								--color: red;
							}
						}
					}
				}
			}

			.servers_link {
				flex-grow: 1;

				display: flex;
				flex-direction: column;
				justify-content: space-between;

				padding: var(--q1);

				text-decoration: none;

				svg {
					width: var(--fs-3);
					height: var(--fs-3);

					margin-right: var(--q1);

					// Make it point to the correct direction
					transform: scaleX(-1);

					:host-context(.game-rdr3) &, :host-context(.game-ny) & {
						transform: none;
						width: var(--q2);
						height: var(--q2);
						margin-right: var(--fs-1);
					}

					@include theme() using ($theme) {
						fill: gtv($theme, accentColor1);
					}
				}

				h1 {
					text-transform: uppercase;
					letter-spacing: 2px;

					transition: all .2s ease;

					.material-icons-outlined {
						font-size: var(--fs-7);

						transition: all .2s ease;
					}
				}

				.nickname {
					margin-top: var(--q1);
					opacity: .75;
				}

				.memeing {
					@include theme() using ($theme) {
						color: rgba(gtv($theme, fgColor), .5);
					}
				}

				@include theme() using ($theme) {
					.material-icons-outlined {
						color: gtv($theme, accentColor1);
					}
				}
			}

			.links {
				display: flex;
				justify-content: stretch;

				a {
					flex-grow: 1;
					justify-self: stretch;

					padding: var(--q1);

					text-align: center;

					@include fontMontserrat;
					text-transform: uppercase;
					text-decoration: none;

					@include theme() using ($theme) {
						background-color: rgba(gtv($theme, bgColor), .2);

						&:hover, &:focus {
							background-color: gtv($theme, accentColor1);
						}
					}
				}
			}
		}

		.links {
			grid-area: links;

			display: flex;
			flex-direction: column;
			justify-content: stretch;

			a {
				display: flex;
				align-items: center;

				flex-grow: 1;
				justify-self: stretch;

				margin-top: calc(var(--q1) / 2);

				padding: var(--q1);

				@include fontMontserrat;
				text-transform: uppercase;
				text-decoration: none;

				transition: all .2s ease;

				@include backdropPane;

				@include theme() using ($theme) {
					&:hover, &:focus {
						background-color: gtv($theme, accentColor1);

						transition: none;
					}
				}

				.material-icons-outlined {
					font-size: var(--fs-1);

					margin-right: calc(var(--q1) / 2);

					@include theme() using ($theme) {
						&.supporters {
							color: gtv($theme, yellowColor);
						}
						&.history {
							color: gtv($theme, redColor);
						}
						&.favorites {
							color: gtv($theme, blueColor);
						}
						&.localhost {
							color: gtv($theme, accentColor2);
						}
					}
				}
			}

			a:first-child {
				margin-top: 0;
			}
		}

		.story,
		.replay,
		.ad {
			@include backdropBlur;
			@include backdropPane;
			@include borderedPane;

			padding: var(--q1);
		}

		.ad {
			position: relative;
		}

		.story, .ad > div {
			display: flex;
			flex-direction: column;
			justify-content: space-between;

			p, section {
				margin-top: var(--q1);

				font-size: var(--fs-1);

				@include theme() using ($theme) {
					color: rgba(gtv($theme, fgColor), .5);
				}

				& > span {
					position: absolute;
					right: var(--q1);
					bottom: var(--q1);

					@include theme() using ($theme) {
						color: rgba(gtv($theme, fgColor), .8);
					}

					font-size: 80%;
				}
			}
		}

		.ad {
			grid-area: ad;

			&:before {
				@include theme() using ($theme) {
					background-color: rgba(gtv($theme, bgColor), .7);
				}

				content: ' ';

				position: absolute;
				top: 0px;
				left: 0px;
				right: 0px;
				bottom: 0px;

				z-index: -98;

				transition: all .2s ease;
			}

			&:after {
				background: center / cover var(--banner-image), center / 250px url(../../assets/images/bgpat.png);
				content: ' ';

				position: absolute;
				top: 0px;
				left: 0px;
				right: 0px;
				bottom: 0px;

				z-index: -99;
			}

			&:hover:before {
				@include theme() using ($theme) {
					box-shadow: 0 0 0 2px gtv($theme, accentColor1) inset;
				}

				transition: none;
			}

			position: relative;

			& > div {
				height: 100%;
			}

			section > div {
				display: inline-block;
				margin-right: var(--q1);
			}

			.card_title {
				display: block;
				white-space: nowrap;
				text-overflow: ellipsis;

				overflow-x: hidden;
				overflow-y: hidden;
			}
		}

		.story {
			grid-area: story;
		}

		.replay {
			grid-area: replay;
		}

		.create {
			grid-area: create;
		}

		.tweets {
			@include backdropPane;
			@include borderedPane;

			padding: var(--q1);

			display: flex;
			flex-direction: column;

			.title {
				margin-bottom: var(--qh);

				font-size: var(--fs-2);
				@include fontMontserrat;
				font-weight: 500;
				line-height: 1;
				letter-spacing: 2px;
				text-transform: uppercase;

				opacity: .25;

				text-align: justify;

				flex: 0;
			}

			cdk-virtual-scroll-viewport {
				flex-grow: 1;
				overflow-x: hidden;
				overflow-y: auto;

				::ng-deep .cdk-virtual-scroll-content-wrapper {
					width: 100%;
				}
			}
		}

		.community {
			grid-area: community;
		}

		.official {
			grid-area: official;
		}
	}

	::ng-deep a {
		color: inherit;
	}

	.subnav-item span+span {
		white-space: nowrap;
		text-overflow: ellipsis;
		overflow-x: hidden;
	}
}
